/*
: >Los pseudoselectores se especifican con dos puntos, indica que son elementos que no existen como tal en html.
    root --> Es una manera de almacenar variable en css se les conoce como custom properties.
    La sintaxis de custom properties es la siguiente:
    guionguion > --Nombre
    para usar las custom properties debemos de usar var(nombre de la variable)
*/
:root{
    --blanco: #ffffff;
    --negro: #000;
    --primario: #00BFFF;
}


html{
    font-size: 62.5%;
    box-sizing: border-box; /*Hack para el modelo caja*/
    scroll-snap-type: y mandatory;
}

*, *:before, *:after {
    box-sizing: inherit;
  }

body{
    font-size:16px;/*1rem = 10px*/
    font-family:'Gill Sans MT'; /*Aplica las fuentes a todo el documento.*/
}
 h1{
    font-size: 4rem;
 }
 
 h2{
    font-size: 3rem;
 }

 h3{
    font-size: 1.8rem;
 }

 h1, h2, h3 {
    text-align: center;
    color: var(--negro);
 }

h1 span{
    font-size: 1.5rem;
    color: var(--primario);
    font-family: 'Poiret One', cursive;
}

.boton{
    background-color: var(--negro);
    color: var(--blanco);
    text-decoration: none;
    padding: 1rem 1.3rem;
    font-size: 2rem;
    margin-top: 1.3rem;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: .5rem;
    width: 90%;
    text-align: center;
    border: none;
}

.boton:hover{
    background-color: var(--primario);
    cursor: pointer;
}

@media(min-width: 760px){
    .boton{
        width: auto; /*El auto significa que el boton se resetea.*/
    }
}

/* Utilidades */

.w-sm-100{
    width: 100%;
}
@media(min-width: 760px){
    .w-sm-100{
        width: auto;
    }
}
.flex{
    display: flex;
}

.alinear-derecha{
    justify-content: flex-end;
}
.fondo_navegacion{
    background-color: var(--negro);
}


.contenedor{
    max-width: 120rem;
    margin: 0 auto;  
    /*
    margin-top: 0;
    margin-right: auto;
    margin-bottom: 0;
    margin-left: auto;

    podemos hacer lo mismo con:
    margin: margin_top margin_right margin_bottom margin_left
    ejemplo:
    margin: 0 auto 0 auto; pero si los dos primeros valores se repiten, basta con expresar los primeros dos
    margin: 0 auto
    */
}

.navegacion_principal {
    /*padding: 1rem; al igual que con la propiedad del margin si usamos solo padding y ponemos un solo valor este aplica para todas las direcciones: top right botton left*/
    display: flex;
    flex-direction: column;
}

@media (min-width: 760px){
    .navegacion_principal{ 
        flex-direction: row;
        justify-content: space-between;
    }
}

.navegacion_principal a {
    display: block;
    text-align: center;
    color: var(--blanco);
    text-decoration: none;
    font-size: 1.8rem;
    font-weight: bold;
    padding: 1rem;/*Se pasa el padding aquí ya que de esta manera ensanchamos el texto del enlace, que el que nos interesa que abarque el color de fondo cuando se hace el efecto hover.*/
}

.navegacion_principal a:hover{
    background-color: var(--primario);
    /*color: var(--negro) en caso de que quisiera que el color de la letra también cambie.*/
}

.hero{
    background-image: url(../img/m55.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 400px;
    position: relative;
    margin-bottom: 2.5rem;
}

.contenido-hero{
    background-color: rgba(0,0,0, .5); /*Va de cero a uno la transparencia*/
    background-color: rgb(0 0 0 /50%);
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}
.contenido-hero h2, .contenido-hero p {
    color: var(--blanco);
}

.ubicacion {
    display: flex;
    align-items: end;
}

.sombra{
    -webkit-box-shadow: 0px 2px 12px 0px rgba(0,0,0,0.75);
    -moz-box-shadow: 0px 2px 12px 0px rgba(0,0,0,0.75);
    box-shadow: 0px 2px 12px 0px rgba(0,0,0,0.75);
    background-color: var(--blanco);
    padding: 2rem;
}

/*Servicios*/

.servicio, .navegacion_principal, .formulario {
    scroll-snap-align: center;
    scroll-snap-stop: always; /*Forzamos a que se detenga el scroll en esta sección*/
}


@media(min-width: 760px){
    .servicios {
        display: grid;
    
        grid-template-columns: 33.3% 33.3% 33.3%;
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-columns: repeat(3, 1fr);
        
        column-gap: 5rem; /*Separación entre columnas.*/
    }
}

.servicio {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.servicio .iconos{
    height: 15rem;
    width: 15rem;

    background-color: var(--primario);
    border-radius: 50%;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}

.servicio p{
    line-height: 2; /*Interlineado*/
    text-align: center;
}

/*Formulario contacto*/

.formulario{
    background-color: var(--negro);
    width: min(60rem, 100%); /*min toma el valor más pequeño entre ese rango*/
    margin: 0 auto;
    padding: 2rem;
    border-radius: 1rem;
}

.formulario fieldset{
    border: none;
}

.formulario legend{
    text-align: center;
    font-weight: bold;
    margin-bottom: 3rem;
    font-size: 1.5rem;
    text-transform: uppercase;
    color: var(--blanco);
}



@media(min-width: 760px){
    .contenedor-campos{
        display: grid;
        grid-template-columns: repeat(2, 1fr); /*Defino el area de las columnas*/
        grid-template-rows: auto;
        column-gap: 2rem; /*separación entre columnas*/
    }
}

.campo{
    margin-bottom: 1rem;
}

.campo label{
    color: var(--blanco);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block;
}

.input-text{
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: 1rem;
}

.enviar .boton{
    width: 100%;
}

.campo textarea{
    height: 20rem;
}

.campo:nth-child(1){
    grid-row: 1/2;
    grid-column: 1/3;
}

/* .campo:nth-child(2){
    grid-column: 1/3;
}

.campo:nth-child(3){
    grid-row: 3/4;
    grid-column: 1/3;
} */
.campo:nth-child(4){ /*Con nth-child >>> lo que hacemos que para los elementos que tienen la misma clase seleccionamos el elemento en especifico, para no tener que crear otra clase*/
    grid-column: 1 / 3; /*De qué columna a qué columna debe de abarcar este campo.*/
}

.campo:nth-child(6){
    grid-column: 2/3;
}

.footer{
    text-align: center;
}